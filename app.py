from flask import Flask, request, jsonify, render_template
from generate_tweet import create_tweet, create_compare_tweets_with_gemini_models

# Initialize Flask app with static and template folders
app = Flask(__name__, static_folder='static', template_folder='templates')

# Route: Home page
@app.route('/')
def index():
    # Render the main HTML interface
    return render_template('index.html')

# Route: Generate a tweet based on user prompt
@app.route('/generate_tweet', methods=['POST'])
def generate_tweet():
    # Parse JSON request body
    data = request.get_json()

    # Validate presence of 'prompt' key
    if 'prompt' not in data:
        return jsonify({"error": "Missing 'prompt' in request body"}), 400

    # Call tweet generation logic using the provided prompt
    result = create_tweet(data['prompt'])

    # Handle case where no tweet could be generated
    if result is None:
        return jsonify({"error": "No top tweets found for engagement type"}), 404

    # Return generated tweet as JSON
    return jsonify(result), 200

# Route: Compare tweets generated by different Gemini models
@app.route('/compare_tweets', methods=['POST'])
def compare_tweets():
    # Parse JSON request body
    data = request.get_json()

    # Validate presence of 'prompt' key
    if 'prompt' not in data:
        return jsonify({"error": "Missing 'prompt' in request body"}), 400

    # Call tweet comparison logic using the provided prompt
    output = create_compare_tweets_with_gemini_models(data['prompt'])

    # Handle case where comparison failed
    if output is None:
        return jsonify({"error": "Could not perform tweet comparison"}), 500

    # Return comparison results as JSON
    return jsonify(output), 200

# Entry point: Run the Flask app in debug mode
if __name__ == '__main__':
    app.run(debug=True)